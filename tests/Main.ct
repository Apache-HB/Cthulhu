import std::algo(*);
import std::algo(strlen);

type qword = u64;
type dword = u32;

@[extern("C"), packed(1)]
struct StivaleHeader {
    qword stack;
    dword mode;
    dword width;
    dword height;
    dword depth;
}

// sanity check the size of the header
@assert(@size(StivaleHeader) == 24);

var initstack: u8[4096];

@section(".stivalehdr")
var stivalehdr = StivaleHeader(
    stack = initstack + @size(initstack)
);

@[extern("C"), noreturn]
def _start -> void {
    // text to write to vga buffer
    let text = "hello world";
    let vga = as<mut(u16)*>(0xB8000);

    // write the text to vga
    for idx : @strlen(text) {
        /*    ^ try to evalulate the strings length at compile time */
        vga[idx] = text[idx];
    }

    while true {}
}