module a::b::c {
    variant type: int {
        a(i: int, b: bool) = 0,
        c(c: *char)
    }

    export def a(): type {
        return type::a(
            .i = 5, 
            .b = true
        );
    }

    def stuff() = 5 * 10;
}

@name
def decorated() {

}

@[name, name2]
@yes(arg)
def decorated2() {
    while :name 5 == 6 {
        break name;
    } else {
        return 25;
    }

    for :it [a, b] .. range(10, 20) {

    } else {
        return;
    }
}

final x = 10;
final [y, z] = int(10, 20);

def thing() {
    if x {

    } else if y {

    } else if var x = 10 then x == 10 {

    } else {

    }
}