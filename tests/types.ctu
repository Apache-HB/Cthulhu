
# variant type
type v = variant {
    x => int,
    y => float,
    z => { x: int, y: bool }
}

# backed variant type
type vb = variant: u32 {
    a => bool,
    b => float,
    c => { x: u32, y: i64 }
}

# enum type
type e = enum {
    x := 5,
    y := 1
}

# backed enum type
type eb = enum: u32 {
    a := 0,
    b := 1,
    c := 2
}

# struct type
type s = {
    a: u32,
    b: u32,
    c: u32,
    d: u32
}

# tuple type
type t = (bool, u32, u64)

# union type
type us = union { a: u32, b: u64 }

# pointer type
type p = *u64
