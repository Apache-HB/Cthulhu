config {
    name "pl/0"
    version "3.0.0"
}

ast {
    digit (mpz digit)

    ident (string ident)

    call (string procedure)

    print (ast print)

    unary (unary unary, ast operand)

    binary (binary op, ast lhs, ast rhs)

    compare (compare op, ast lhs, ast rhs)

    assign (string dst, ast src)

    branch (ast cond, ast then)

    stmts (vec[ast] stmts)

    proc (
        string name, 
        vec[string] locals, 
        vec[ast] body
    )

    const (string name, ast init)

    var (string name) 

    module (
        string name, 
        vec[const] consts, 
        vec[var] globals, 
        vec[proc] procs, 
        vec[string] imports,
        proc? entry
    )
}

lexing {
    keywords {
        decl {
            MODULE ((?i:module))
            IMPORT ((?i:import))
            CONST ((?i:const))
            VAR ((?i:var))
            PROC ((?i:procedure))
        }

        control {
            IF ((?i:if))
            THEN ((?i:then))
            WHILE ((?i:while))
            DO ((?i:do))
            CALL ((?i:call))

            ODD ((?i:odd))

            pairs {
                BEGIN:END ((?i:begin) (?i:end))
            }
        }
    }

    symbols {
        SEMI (";")
        DOT (".")
        COMMA (",")
        ASSIGN (":=")

        EQUALS ("=")
        NOTEQUAL ("!=")
        LESS ("<")
        GREATER (">")
        LESSEQ ("<=")
        GREATEQ (">=")

        PRINT ("!")

        DIV ("/")
        MUL ("*")
        SUB ("-")
        ADD ("+")

        pairs {
            LPAREN:RPAREN ("(" ")")
        }
    }

    IDENT ([a-zA-Z_][a-zA-Z9-9_]*) { yylval->ident = pl0_normalize(yytext); }
    NUMBER ([0-9]+) { mpz_init_set_str(yylval->number, yytext, 10); }
}

rules {

}
