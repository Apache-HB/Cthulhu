module volts::io;

export struct IoHandle {
    fnMap: def(*Io) -> opaque;
    fnSize: def(*Io) -> usize;
    fnRead: def(*Io, opaque, usize) -> usize;
    fnWrite: def(*Io, opaque, usize) -> usize;

    fnClose: def(*Io) -> void;
}

export variant Access {
    case Read = (1 << 0)
    case Write = (1 << 1)
}

export variant Mode {
    case Binary = (1 << 0)
    case Text = (1 << 1)
}

export struct Io {
    name: str;
    error: usize;

    access: Access;
    mode: Mode;

    cb: *IoHandle;
    data: opaque;
}
