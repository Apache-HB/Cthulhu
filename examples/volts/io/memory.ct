module volts::io::memory;

import volts::io;
import cthulhu::stdlib as cstd;

struct View {
    data: opaque;
    size: usize;
    cursor: usize;
}

def getMaxRead(pos: usize, len: usize, total: usize): usize {
    if pos + len > total {
        return total - pos;
    }

    return len;
}

def viewRead(io: *io::Io, dst: opaque, size: usize): usize {
    var self: *View = io->data;
    const max = getMaxRead(self->cursor, size, self->size);

    cstd::memcpy(dst, self->data + self->cursor, max);

    self->cursor = self->cursor + max;

    return max;
}
