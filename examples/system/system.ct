type LPSTR = str;
type DWORD = uint;
type BOOL = int;

struct System {
    name: str;
}

@extern("printf")
def printf(fmt: str, ...): int;

@extern("malloc")
def alloc(size: usize): opaque;

@extern("GetComputerNameA")
def win32GetComputerNameA(name: str, size: *DWORD): BOOL;

def getComputerName: str {
    var size: DWORD = 256u;
    var name: str = alloc(size);
    if win32GetComputerNameA(name, &size) == 0 {
        return "Unknown";
    }

    return name;
}

export def newSystem: System {
    var result: System = noinit;
    result.name = "System";
    return result;
}

export def getSystemName(system: System): str {
    return system.name;
}

@entry(cli)
def main {
    const system = newSystem();
    printf("System name: %s\n", getSystemName(system));
}
