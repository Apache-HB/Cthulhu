# languages

option('lang_ctu', type : 'feature',
    description : 'build the ctu language driver',
    value : 'auto'
)

option('lang_pl0', type : 'feature',
    description : 'build the pl0 language driver',
    value : 'auto'
)

option('lang_oberon', type : 'feature',
    description : 'build the oberon-2 language driver',
    value : 'auto'
)

option('lang_jvm', type : 'feature',
    description : 'build the jvm language driver',
    value : 'disabled'
)

option('lang_example', type : 'feature',
    description : 'build the example language driver',
    value : 'auto'
)

option('lang_c', type : 'feature',
    description : 'build the c language driver, implies lang_cpp',
    value : 'auto'
)

option('lang_cpp', type : 'feature',
    description : 'build the c preprocessor',
    value : 'auto'
)

# interfaces

option('frontend_cli', type : 'feature',
    description : 'build the cli frontend',
    value : 'auto'
)

option('frontend_example', type : 'feature',
    description : 'build the example frontend',
    value : 'auto'
)

option('frontend_gui', type : 'feature',
    description : 'build gui frontend (requires c++ compiler)',
    value : 'auto'
)

# targets

option('target_cfamily', type : 'feature',
    description : 'Generates C89 code from the ssa form',
    value : 'auto'
)

option('target_debug', type : 'feature',
    description : 'Debug output for both tree and ssa forms',
    value : 'auto'
)

option('target_hlsl', type : 'feature',
    description : 'Emits HLSL code from the tree form',
    value : 'auto'
)

option('default_target', type : 'combo',
    description : 'Control the default target of the compiler',
    choices : ['cfamily', 'debug', 'hlsl'],
    value : 'cfamily'
)

# plugins

option('plugin_timer', type : 'feature',
    description : 'enable timer plugin',
    value : 'auto'
)

# trace options

option('trace_memory', type : 'feature',
    description : 'enable memory allocation tracing',
    value : 'auto'
)

option('paranoid', type : 'feature',
    description : 'enable paranoid assertions',
    value : 'auto'
)

option('trace_time', type : 'feature',
    description : 'profile the build process using clang time trace, also requires ninjatracing to generate the report',
    value : 'auto'
)

# testing options

option('unit_tests', type : 'feature',
    description : 'enable unit tests',
    value : 'auto'
)

option('driver_tests', type : 'feature',
    description : 'enable end-to-end driver tests',
    value : 'auto'
)

# doxygen options

option('doxygen', type : 'feature',
    description : 'build doxygen docs',
    value : 'auto'
)

# build options

option('analyze', type : 'feature',
    description : 'enable static code analysis',
    value : 'disabled'
)

option('win32_trickery', type : 'feature',
    description : 'enable some slightly hacky win32 handling to speed up builds',
    value : 'disabled'
)

option('stb_sprintf', type : 'feature',
    description : 'use stb_sprintf instead of the libc printf',
    value : 'auto'
)

# tools

option('tool_notify', type : 'feature',
    description : 'notify testing tool',
    value : 'auto'
)

option('tool_diagnostic', type : 'feature',
    description : 'diagnostic search tool',
    value : 'auto'
)

option('tool_display', type : 'feature',
    description : 'format testing tool',
    value : 'auto'
)

option('tool_error', type : 'feature',
    description : 'backtrace exception testing tool',
    value : 'auto'
)

option('tool_tar', type : 'feature',
    description : 'tar library frontend',
    value : 'auto'
)
